var REGULAR = 0;
var NEW_RELEASE = 1;
var CHILDRENS = 2;

class Movie(title: string, priceCode: int) {
  fun getPriceCode(): int => this.priceCode;
  fun getTitle(): string => this.title;
}

class Rental(movie: Movie, daysRented: int) {
  fun getDaysRented(): int => daysRented;
  fun getMovie(): Movie => movie;
}

class Customer(name: string) {
  private var rentals: array = [];

  fun addRental(rental: Rental) => array_push(rentals, rental);
  fun getName(): string => name;
  fun statement(): string => "hello world\n";

  // public function statement(): string {
  //   $totalAmount = 0;
  //   $frequentRenterPoints = 0;
  //   $result = "Rental Record for " . this.getName() . "\n";

  //   // determine amounts for each line
  //   foreach (this.rentals as $rental) {
  //     $thisAmount = 0;

  //     switch ($rental.getMovie().getPriceCode()) {
  //       case Movie::REGULAR:
  //         $thisAmount += 2;
  //         if($rental.getDaysRented() > 2)
  //           $thisAmount += ($rental.getDaysRented() - 2) * 1.5;
  //         break;
  //       case Movie::NEW_RELEASE:
  //         $thisAmount += $rental.getDaysRented() * 3;
  //         break;
  //       case Movie::CHILDRENS:
  //         $thisAmount += 1.5;
  //         if($rental.getDaysRented() > 3)
  //           $thisAmount += ($rental.getDaysRented() - 3) *1.5;
  //         break;
  //     }

  //     // add frequent renter points
  //     $frequentRenterPoints++;

  //     // add bonus for a two day new release rental
  //     if (($rental.getMovie().getPriceCode() == Movie::NEW_RELEASE) &&
  //         $rental.getDaysRented() > 1) $frequentRenterPoints++;

  //     // show figures for this rental
  //     $result .= "\t" . $rental.getMovie().getTitle() . "\t" .
  //                 $thisAmount . "\n";
  //     $totalAmount += $thisAmount;
  //   }

  //   // add footer lines
  //   $result .= "Amount owed is " . $totalAmount . "\n";
  //   $result .= "You earned " . $frequentRenterPoints .
  //           " frequent renter points";

  //   return $result;
  // }
}

var prognosisNegative = new Movie("Prognosis Negative", NEW_RELEASE);
var sackLunch = new Movie("Sack Lunch", CHILDRENS);
var painAndYearning = new Movie("The Pain and the Yearning", REGULAR);

var customer = new Customer("Susan Ross");
customer.addRental(new Rental(prognosisNegative, 3));
customer.addRental(new Rental(painAndYearning, 1));
customer.addRental(new Rental(sackLunch, 1));

echo customer.statement();
